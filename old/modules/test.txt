ПРЕДВАРИТЕЛЬНАЯ ОБРАБОТКА ИЗОБРАЖЕНИЙ ДЕФЕКТОВ
В СИСТЕМАХ ТЕХНИЧЕСКОГО ЗРЕНИЯ

Цель работы
	Изучение методики предварительной обработки изображений дефектов реальных плоских объектов в системах диагностики на базе технического зрения 

Краткие теоретические сведения
	На современном этапе развития компьютерных технологий все более широкое распространение получают системы технического зрения (СТЗ). Их основное назначение — помочь человеку в областях деятельности, связанных со сбором и анализом зрительной информации, или даже заменить его. Уровень использования СТЗ в прикладных областях является одним из наиболее ярких и наглядных показателей развития высоких технологий в самых различных сферах человеческой деятельности. Традиционно развитие СТЗ ориентировано на промышленное производство, связанное с робототехникой.
	На изображениях практически каждого реального объекта присутствуют шумовые составляющие. Они могут возникать из-за несовершенства видеодатчиков, наличия пыли или грязи на обрабатываемой поверхности, износа источников освещения и пр. Все эти помехи затрудняют распознавание объектов с помощью СТЗ, и если их не сократить (в идеале — удалить), помехи могут привести к значительным ошибкам.
	Снизить уровень ошибок при распознавании позволяет использование быстрых алгоритмов предварительной обработки изображений плоских объектов сразу после их получения с видеодатчика. 
	Рассмотрим этапы предлагаемой методики предварительной обработки изображений плоских объектов.
	Этап 1. Снижение уровня шума на изображениях объектов до требуемого. 
	К настоящему времени разработано много методов и алгоритмов сглаживания шума. Среди них можно выделить методы адаптивного сглаживания, анизотропной диффузии и медианной фильтрации. Последний обладает высоким быстродействием и позволяет снизить уровень помех на изображениях, при его работе не происходит усреднения по яркости, контуры объектов на изображении не размываются.
	Обозначим последовательность обрабатываемых точек в виде одномерного массива  . Обычно используется квадратная апертура размером  , k=1,2,…, и в каждой точке растра (i, j) яркость пересчитывается по следующему правилу:
	апертура помещается в левый верхний угол так, чтобы ее центр совпал с точкой (i, j). Яркости  элементов изображения, попавших в окно, нумеруются по возрастанию:  
	При этом медианой набора  является его средний элемент. Описанную процедуру можно представить следующим образом:
 
	Этап 2. Бинаризация изображений.
	 Бинаризация является одним из основных методов обработки изображений в робототехнике, позволяющих выделять объекты в поле зрения СТЗ. Наиболее известны следующие алгоритмы бинаризации: 
— адаптивная бинаризация;
— метод Отсу;
— обработка с постоянным порогом.
	Исследования показали, что лучшие результаты как по скорости, так и по качеству уменьшения шума дает метод Отсу. Данный алгоритм состоит из двух основных шагов.
	Шаг 1. Автоматическое определение порога бинаризации по нормированной гистограмме яркостей изображения по формуле:
 
где N — общее число пикселов на изображении;   — число пикселов с уровнем яркости i.
	Шаг 2. Процедура простого порогового разбиения изображения. Диапазон яркостей делится на два класса с помощью порогового значения уровня яркости t (целое значение от нуля до L). При этом каждому классу соответствуют:
 
где  и  — относительная частота двух классов 0 и 1, разделенных порогом i;      и  — средний уровень для каждого из двух классов 0 и 1 изображения, разделенных порогом i.
	Этап 3. Маркировка. Наиболее известны алгоритмы маркировки связных областей путем последовательного сканирования и рекурсивной маркировки.
	Исследования показали, что лучшим по быстродействию является алгоритм последовательного сканирования. Он заключается в следующем:
— изображение последовательно сканируется слева-направо и сверху-вниз;
— для каждой точки изображения анализируется ее окрестность 3×3;
 
— проверяются условия:
 
где N — номер связной компоненты (объекта).


	В результате работы описанного алгоритма получаем изображение, в котором каждому объекту присвоен отдельный номер.
	К настоящему моменту разработаны рекурсивный алгоритм удаления объектов, расположенных по краю поля зрения, и алгоритм удаления объектов по площади. Наиболее быстродействующим является первый алгоритм.
	Этап 5. Выделение контура. Существует множество алгоритмов выделения контуров бинарных изображений: алгоритм жука, алгоритм направленного перебора, сканирующий алгоритм, рекурсивный метод, метод связности.
	Наиболее быстродействующим является алгоритм направленного перебора. Контурное изображение формируется следующим образом: для каждой точки изображения анализируется ее окрестность 3×3.
	Точка  считается контурной, если выполняются следующие условия:
 
	В результате получаем одноточечный безразрывный контур, состоящий из четырех связных точек.
	Этап 6. Вычисление центра тяжести объекта, заданного координатами  , определяемыми как среднее значение координат  , принадлежащих объекту, в соответствии с уравнениями:
 
	где  — текущие координаты точек контура по оси X и Y соответственно; m — число точек контура объекта.
	Этап 7. Определение длины объектов. Существует несколько алгоритмов вычисления длины объекта: путем определения длины максимальной хорды; путем вычисления максимального расстояния между двумя параллельными касательными и путем построения выпуклой оболочки объекта и определения максимальной стороны. Наиболее быстродействующим является первый алгоритм, он состоит в следующем. Для каждой точки контура вычисляется расстояние между ней и соседними точками по формулам:
 
Длина объекта есть максимальное значение:
 
где  — число точек контура.
	Этап 8. Поворот объектов. Среди алгоритмов поворота можно выделить основанный на расчете тангенса угла наклона линии длины объекта к оси Х. Однако наиболее быстрым является алгоритм, в котором для поворота объекта на угол α координаты каждой точки объекта пересчитываются в соответствии с формулами:
 
где  — новые координаты точки,  — исходные координаты точки.

	Изложенная методика, включающая рассмотренные алгоритмы, может быть применима для анализа дефектов реальных плоских объектов по их изображениям. 	Некоторые объекты и результаты их предварительной обработки приведены на рис.
	Достоинством методика является простота реализации, быстродействие, которое дает возможность идентифицировать объекты в СТЗ, работающих в режиме реального времени. Общее время работы рассмотренных алгоритмов при 5—6 объектах на изображении составляет 120 мс.

 

Лабораторная работа № 1
Обнаружение и подсчет количества объектов на изображении















	




К работе допущен:
	Работу выполнил:
	Работу защитил:




Теоретическое введение.
	Для целей компьютерной обработки изображений предлагается использовать систему Matlab, являющуюся мощным средством математического моделирования, способным обеспечить проведение исследований во всех известных областях науки и техники, и позволяющее использовать все современные достижения компьютерных технологий, в том числе средства визуализации данных.
	В самом общем случае процедура распознавания объектов на изображении сводится к следующей последовательности. Будем рассматривать изображения, воспроизведенные в виде двумерных статических изображений (фотографий). Первым шагом распознавания является этап подготовки изображения к распознаванию, т.е. предварительная обработка изображения. На следующем этапе осуществляется формирование признаков изображения. И, наконец, решается задача локализации объекта на изображении и определение его принадлежности к определенному классу объектов на основе анализа соответствующих ему признаков и характеристик. Рассмотрим этапы компьютерной обработки цифрового изображения, целью которой является обнаружение объектов на нем:
1) Считывание и визуализация некоторого исходного изображения.
Изображение принято представлять в виде функции распределения значений интенсивности (яркости, освещенности) в фиксированной плоскости – J (x,y), где x,y – координаты в этой плоскости.

 


2) Преобразование исходного изображения с помощью морфологических операций. Суть метода заключается в формировании дискообразного структурного элемента с использованием радиальной декомпозиции окружностей или периодических линий, и заполнения им изображения. Таким образом, получаем изображение фона.
 

 

3) Логические преобразования над изображениями, заключающиеся в вычитании изображения фона из исходного изображения. Результатом является получение изображения объектов на достаточно однородном фоне. 
   


4) Бинаризация полученного изображения, т.е. преобразование изображения, в общем случае, к одноцветному (чаще всего к черно-белому). Вычисление порога бинаризации с помощью алгоритма Отсу. Алгоритм позволяет разделить пиксели двух классов («полезные» и «фоновые»), рассчитывая такой порог, чтобы внутриклассовая дисперсия была минимальной.  
  \
 

5) Фильтрация изображения, позволяющая выделить на изображениях интересующие области. Назначение фильтрации состоит в выделении интересующих объектов на фоне из множества других объектов. Эффективным критерием отбора объектов является их площадь на изображении. Однако, прежде, чем вычислить площади объектов требуется их обозначить, т.е. осуществить поиск связных областей на изображении. Оставшиеся объекты могут быть подготовлены к последующему анализу.

6) Детектирование или локализация интересующих объектов на изображении и анализ их характеристик. Под анализом подразумевается вычисление геометрических характеристик, подсчет количества объектов, определение принадлежности к определенным классам и др. 	 Таким образом, в работе изложена последовательность этапов компьютерной обработки изображения с целью 







обнаружения и детектирования объектов, приведен пример её реализации средствами системы Matlab. Данная методика может быть использована при распознавании образов для различных областей: образование, промышленность, военное дело.
 
 
















Лабораторная работа № 2

Определение размеров дефектов на изображении.

































К работе допущен:
	Работу выполнил:
	Работу защитил:



Выполнение работы:
	















Лабораторная работа № 3

Подсчитать количество дефектов на изображении.

































К работе допущен:
	Работу выполнил:
	Работу защитил:




Выполнение работы:

Исходное изображение № 1  имеет вид:
 

Программа для обработки изображения:      
   

























Лабораторная работа № 4

Распознавание объекта на изображении
(ограничивающая контур рамка).

































К работе допущен:
	Работу выполнил:
	Работу защитил:



Выполнение работы:

1) Считываем исходное изображение.
 
 

2) На изображении выбрать пиксели с характерным цветом, определить среднее значение их интенсивности и среднеквадратическое отклонение.
 


3) Производится сегментация на основе анализа цвета.
 
 

4) Производится удаление объектов, площадь которых меньше некоторой заданной величины (удаление шума).
  

5) Удаление других объектов на сегментируемом изображении.
 
 

6)  Удаление других объектов на сегментируемом изображении.
 
 

7) Визуализация массива координат центров объекта.
 
 

8) Распознаный объект обводим ограничивающим прямоугольником.
 
 
   
 

 Лабораторная работа № 5

























К работе допущен:
	Работу выполнил:
	Работу защитил:



Выполнение работы:

   % Распознавание геометрических фигур
    
    clear;
L=imread(‘G:\Диагн_Неразр_контр\lab_2\выполнение\YWwrMdLfAEQ.jpg’);
figure, imshow(L);
L=L(:,:,1);
L=double(L)./255;
BW=roicolor(L,0,.3);
    [BW1 num]=bwlabel(BW,8);
    
feats=imfeature(BW1,'Area',8);
Areas=zeros(num);
for i=1:num;
 Areas(i)=feats(i).Area;
end;
idx=find(Areas>100);
BW=ismember(BW1,idx);
figure, imshow(BW);
[BW1 num]=bwlabel(BW,8);
feats=imfeature(BW1,'Area',8);

%Удаление объектов, площадь которых меньше некоторой заданной величины (для удаления шума)

[mitka num]=bwlabel(BW,8);
feats=imfeature(mitka,'Area',8);
Areas=zeros(num);
for i=1:num;
    Areas(i)=feats(i).Area;
end;
idx=find(Areas>1150);
BW2=ismember(mitka,idx);
figure,imshow(BW2);title('Posle ydalenia shuma (malix obiektov)');

% Удалим также и другие объекты на сегментированном изображении 
BW2=1-BW2;
[mitka num]=bwlabel(BW2,8);
feats=imfeature(mitka,'Area',8);
Areas=zeros(num);
for i=1:num;
    Areas(i)=feats(i).Area;
end;
idx=find(Areas>4750);
BW2=ismember(mitka,idx);
BW2=1-BW2;
figure,imshow(BW2);
title('Escho Posle ydalenia shuma (malix obiektov)');

BW1 = BW2(:,:,1);

% Вычисления соответствующих коэффициентов формы 
% 1. коэффициент выпуклости, который равен отношению площади к выпуклой площади объекта   



feats = imfeature(BW1,'Solidity ',8);
Solidity = feats.Solidity


% коэффициент заполнения, который равен отношению площади объекта к площади ограничивающего прямоугольника
feats=imfeature(BW1,'Extent ',8);
Extent = feats.Extent

% для вычисления эксцентриситета эллипса с 
% главными моментами инерции, равными главным моментам инерции объекта
feats=imfeature(BW1,'Eccentricity',8);
Eccentricity = feats.Eccentricity

% Распознавание на базе коэффициентов формы
a = Solidity; b = Extent; c = Eccentricity;

d = 0.007; % погрешность
  if a >= 0.9781-d & a <= 0.9882+d & b >= 0.7804-d & b <= 0.7822+d & c >= 0.0144-d & c <= 0.1194+d;
     disp('круг'); 
  elseif a >= 0.9781-d & a <= 0.9893+d & b >= 0.7822-d & b <= 0.7836+d & c >= 0.6-d & c <= 0.9397+d;
     disp('овал'); 
  elseif a >= 0.9829-d & a <= 1 & b >= 0.8991-d & b <= 1 & c >= 0.8230-d & c <= 0.9374+d; 
     disp('прямоугольник');      
  elseif a >= 0.9882-d & a <= 1 & b >= 0.9073-d & b <= 1 & c >= 0 & c <= 0.13+d; 
     disp('квадрат');       
  elseif a >= 0.9753-d & a <= 0.99+d & b >= 0.4760-d & b <= 0.502+d & c >= 0.8733-500*d & c <= 0.9485+d; 
     disp('треугольник'); 
  else
     disp('неизвестная форма'); 
 end
  
  
 
 
 
ФГБОУ ВПО «КГТА им. В.А. Дегтярёва»

                                                                                               


 Кафедра Приборостроения



Отчет
По лабораторный работам
По дисциплине:
«Методы технической диагностики»

	




Руководитель:                                                                                                        Кузнецова С. В.

Исполнитель:                                                                               ст.гр. У -111			                          Шириев Ф. Ф.
		                    Кулизаде Д. И.
		                    Сукаев И. Р.
		                    Чичеров А. В.
		                     Несин Д. А.
		                    Матвеев А. А.
			          















Ковров 2015

Лабораторная работа №1
Ознакомление с порядком оформления принципиальной электрической схемы радиоэлектронного устройства.
Цель: Получение основных навыков работы в графическом редакторе схем P-CAD Semantic при создании принципиальной электрической схемы.















































Задание:
1.	Создайте в системе P-CAD простейшую схему соответственно своему варианту. Для этого:
	Настройте конфигурацию редактора (формат А4).
	Подключите необходимые библиотеки элементов.
	Разместите условные обозначения элементов в рабочей области.
	Объедините выводы элементов проводниками, проконтролируйте, чтобы все соединения имели электрический контакт (он гарантируется отсутствием желтых квадратиков в местах соединения проводников);
	Откорректируйте, если это необходимо, позиционные обозначения элементов: расположите их вертикально сверху над изображениями элементов, проконтролируйте, чтобы стиль текста всех позиционных обозначений был одинаковым.
Обратите внимание: Всем элементам, устройствам и функциональным группам изделия присваиваются позиционные обозначения, содержащие информацию о виде элемента (например, R – резистор, DD - микросхема, VD –диод ) и его порядковом номере в пределах данного вида (например, R1,R2; C1,C2,…)

При расстановке позиционных обозначений элементов придерживаются правил: 
-	от верхнего левого угла вниз, затем смещаются вправо и снова сверху вниз (сверху вниз);
-	или от верхнего левого угла вправо потом смещаются вниз и снова слева направо (слева направо).
	Под условными обозначениями элементов проставьте их типы.
	Задайте имена цепей (например. А1, А2, и т.д.), сделайте имена цепей не видимыми на схеме.
	Сохраните созданную вами схему в соответствующей папке Х:\ваша_группа\оригинальное имя файла.sch (используйте стандартные команды:	File/Save или File /Save As).

2.	Создайте перечень элементов для своей схемы, используя подготовленный шаблон.
Общий вид схемы


№ вар.	Название схемы	Схема
	Схемы выпрямителей с фильтрами
1	Схема мостового 
выпрямителя 
с емкостным фильтром	 
2	Схема однополупериодного
 выпрямителя с 
П-образным 
емкостным фильтром	 
3	Схема двухполупериодного 
выпрямителя с RC фильтром	 
4	Трехфазный выпрямитель
 (схема Ларионова)	 
	Транзисторные схемы
5	Усилитель 
на биполярном 
транзисторе n-p-n	 
6	Усилитель 
на биполярном 
транзисторе p-n-p	 
7	Стабилизатор напряжения 
на транзисторе 
и стабилитроне	 
	Схемы на ОУ
8	Инвертирующий усилитель	 
9	Неинвертирующий усилитель	 
10	Мультивибратор	 
11	Компаратор	 
12	Активный фильтр НЧ	 
13	Активный фильтр ВЧ	 
14	Активный полосовой фильтр	 
	Умножители напряжения
15	Умножение напряжения на 3	 
16	Умножение напряжения на 4	 
17	Умножение напряжения на 2
	 

Графический редактор печатных плат P-CAD PCB.
Редактор печатных плат P-CAD PCB служит для:
	формирования печатной платы (ПП), соответствующей принципиальной схеме, созданной в P-CAD Schematic;
	задания габаритов ПП и размещения компонентов на печатной плате;
	создания правил ручной и автоматической трассировки соединений на плате;
	ручной или автоматической трассировки проводников.

Запуск графического редактора P-CAD PCB (как и любого модуля системы P-CAD) можно осуществить либо из меню ПУСК, либо из любого модуля P-CAD командой Utils/P-CAD PCB…
Интерфейс программы
Интерфейс программы аналогичен интерфейсу редактора P-CAD Schematic и отличается в основном набором команд основного меню, панели инструментов системных команд и команд размещения (рис. 36).
На рабочем поле создается изображение не схемы, а печатной платы с распложенными на ней компонентами.
 
рис. 36. Рабочее окно редактора P-CAD PCB.
Основные этапы работы при создании печатной платы
Основные этапы работы при создании печатной платы изображены на следующем рисунке (рис. 37).
 
рис. 37. Основные действия, производимые в P-CAD PCB, необходимые для создания печатной платы.
Настройка конфигурации программы.
После запуска редактора необходимо установить удобную для использования среду – настроить конфигурацию (меню Options). 
	Options/Configure. 
Диалоговое окно закладки General представлено на рис. 38.
-	в области Units выберите систему единиц измерения (mm);
-	в области Workspace Size укажите размер рабочей области для размещения компонентов и трассировки электрических соединений (выберите формат в зависимости от размеров печатной платы).
 
рис. 38. Окно настройки конфигурации P-CAD PCB.
Диалоговое окно закладки Online DRC предназначено для настройки процесса проверки технологических параметров при размещении компонентов.
Диалоговое окно закладки Route позволяет настроить правила ручной и интерактивной трассировки проводников, которые используются и некоторыми автотрассировщиками.
	Options/Grid задайте шаг сетки рабочего поля (элементы размещаются в ее узлах). 
-	для компонентов с планарными выводами 1,25мм,
-	для компонентов со штыревыми выводами 2,5мм.
	Options/Layers - просмотрите и, при необходимости, настройте структуру слоев (рис. 39).
-	Любые изображения на печатной плате (проводники, контуры компонентов, текстовая информация, контуры печатной платы и т.д.) производятся в определенном для них слое (список слоев отображен в области Layers). 
 
рис. 39. Структура слоев печатной платы.
По умолчанию установлена следующая структура слоев печатной платы:
	Board –слой контура печатной платы,
	Top, Bottom – слой проводников на верхней (сторона компонентов) и нижней (сторона пайки) стороне платы;
	Top Silk, Bot Silk – слой шелкографии, для изображения контуров компонентов и их позиционных обозначений на верхней и нижней стороне платы;
	Top Paste, Bot Paste – слой флюса для изображения пайки на верхней и нижней стороне платы;
	Top Mask, Bot Mask –слой маски пайки на верхней и нижней стороне платы;
	Top Assy, Bot Assy – дополнительный слой текстовых обозначений на верхней и нижней стороне платы. 
Каждый слой относится к одному из 3х типов:
	Signal – сигнальный слой, слой разводки проводников, помечается символом S. По умолчанию структура слоев для печатной платы устанавливается с двумя сигнальными слоями Top и Bottom;
	Plane – слой металлизации, помечается первым символом Р,
	Non Signal – вспомогательные слои, помечаются символом N.
Тип слоя указывается в поле Type.
Для сигнальных слоев в области Routing Bias задается приоритетное направление трассировки проводников:
	Auto – выбирается автоматически (символ А);
	Horizontal – горизонтальное (символ H);
	Vertical – вертикальное (символ V).
Каждый слой может находится в одном из двух состояний:
	Enable включен (– символ E);
	Disable выключен (– символ D).
(выключив слой Вottom можно задать одностороннюю разводку ПП).
Указанные установки производятся после выделения имени слоя и нажатии соответствующих кнопок, находящихся на передней панели.
Обратите внимание: 
	Чтобы развести одностороннюю плату нужно выключить Disable слой Вottom;
	чтобы развести многослойную плату (более 2х слоев), вдобавок к слоям Top и Bottom необходимо ввести дополнительные сигнальные слои. Для этого:
-	введите имя слоя в области Layer Name;
-	введите номер слоя;
-	цвет слоя система предложит автоматически;
-	установите тип слоя Signal в области Type;
-	нажмите ADD.
Options/Display – просмотрите параметры монитора. В диалоговом окне можно настроить цвета объектов для различных (требуемых для проекта) слоев печатной платы (рис. 40).
 
рис. 40. Установка цвета слоев печатной платы.
Via – переходные отверстия,
Pad – выводы компонентов,
Line – проводники и линии,
Poly – полигоны,
Text – текстовые данные.
Дополнительные параметры монитора можно установить в закладке Miscellaneous.
Упаковка схемы на печатную плату.
Для того чтобы создать печатную плату на основе принципиальной схемы , необходимо на поле печатной платы перенести изображения корпусов компонентов с указанием линий электрических соединений между их выводами (условные обозначения элементов данной схемы автоматически заменяются изображениями корпусов). Этот процесс называется упаковкой схемы на печатную плату.
Чтобы упаковать схему на ПП произведите следующие действия:
	Подключите к проекту соответствующие библиотеки. Для этой цели командой Library/Setup… загрузите созданный вами ранее файл (.lib) интегрированной библиотеки (рис. 41).
 
рис. 41. Окно установки интегрированной библиотеки.
-	Нажмите ADD;
-	Выберите файл (.lib);
-	ОК.
	Нарисуйте на рабочем поле замкнутый контур печатной платы заданных размеров в слое Board. Для этого:
-	В строке статуса установите текущий слой Board;
-	Выберите команду Place/Line, нарисуйте прямоугольник заданных размеров.
Контур печатной платы удобно рисовать, задавая координаты углов в области Х и Y строки состояния. 
	Произведите упаковку схемы на печатную плату. Для этого:
-	загрузите файл списка соединений (с расширением .net), командой Utils/Load Netlist (рис. 42);
-	Найдите нужный файл списка соединений, с помощью опции Netlist Filename;
-	В области Netlist Format установите формат P-CAD ASCII;
-	Остальные опции установите так, как показано на рис. 42.
Обратите внимание: после выполнения команды первоначальный вид печатной платы восстановить невозможно, поэтому ее рекомендуется сохранить в отдельном файле с другим именем.
 
рис. 42. Меню команды загрузки файла соединений.
Компоненты проекта размещаются над верхней границей печатной платы. При этом на экране отображаются прямые линии еще не разведенных электрических связей (рис. 43)
 
рис. 43. Схема, упакованная на печатную плату.
При установке курсора (не нажимая левую кнопку мыши) на объект размещения появляется информация о позиционном обозначении компонента, его типе и значении атрибута компонента, а для электрической цепи – ее номер (имя) и имена компонентов и их контактов, которые цепь соединяет.
Размещение компонентов на плате.
После упаковки схемы на ПП необходимо упорядоченно разместить компоненты на плоскости платы. Отображаемые линии связи между компонентами позволяют разработчику лучше ориентироваться при размещении компонентов.
Команды, описанные в данном разделе, аналогичны соответствующим командам графического редактора P-CAD Schematic.
	Размещение компонентов на печатной плате вручную. Выделенные объекты можно:
-	перемещать с помощью мыши;
-	разворачивать (клавиша R);
-	переносить на другую сторону платы (клавиша F);
-	выполнить автоматическое выравнивание группы объектов, используя команды Selection Point и Align контекстного меню;
Edit/Nets - просмотр (и при необходимости редактирование) электрических цепей проекта (рис. 44).
 
рис. 44. Диалоговое окно команды Edit/Nets
-	В окне Nets отображены имена всех цепей проекта;
-	В окне Nodes указаны имена компонентов и номера их контактов, связанные с выделенной цепью;
	кнопка Rename позволяет изменить имя выделенной цепи.
	кнопка Info выводит информацию о выделенной цепи
	кнопка Jump to Node позволяет перейти к выделенному узлу;
	кнопка Select позволяет перейти к редактированию выбранной цепи.
При размещении компонентов на печатной плате иногда приходится скорректировать свойства компонента: тип посадочного места, имя компонента и др. Для этих целей служит команда Properties контекстного меню. Пять закладок диалогового окна (рис. 45) в полной мере решают задачу просмотра и редактирования свойств компонента. 
 
рис. 45. Закладка Patten редактирования компонента.
Используя уже накопленный опыт работы с пакетом, ознакомьтесь с функциями данного диалогового окна самостоятельно.
Перед началом трассировки соединений полезно провести оптимизацию электрических связей командой Utils/Optimize Nets с целью минимизации общей длины физических связей между компонентами и оптимизации плотности соединений (рис. 46).
 
рис. 46. Окно команды Utils /Optimize Nets.
-	Выберите режим Auto;
-	Установите опцию Entire Design (оптимизация связей в пределах всего проекта).
Происходит оптимизация электрических соединений, результаты которой выводятся в виде текстового сообщения на экран.
Трассировка печатной платы.
После размещения компонентов схемы на ПП необходимо провести трассировку соединений. P-CAD дает возможность развести плату 3-мя способами, используя:
-	ручную трассировку (все дорожки проводятся линиями вручную);
-	интерактивную трассировку (трассы проводятся вручную, но система автоматически следит за соблюдением установленных технологических параметров);
-	автоматическую трассировку (проводники прокладываются автоматически с соблюдением установленных технологических параметров и правил трассировки).
Рассмотрим применение автоматической трассировки с использованием автотрассировщика Quick Route, который позволяет разводить несложные печатные платы, содержащие небольшое количество компонентов. 
Настройка технологических параметров трассировки.
Прежде, чем запустить программу автоматической трассировки нужно ввести информацию о технологических требованиях и правилах трассировки при проектировании печатной платы
-	величины допустимых зазоров между объектами: компонентами, контактными площадками (Pad);проводниками (Line); переходными отверстиями (Via),
-	свойства и классы отдельных цепей и др.
Эта информация хранится в файле технологических параметров проекта (.dtp), доступ к которому осуществляется командой File/Design Technology Parameters. При разработке печатной платы можно вводить параметры и создавать данный файл заново, либо перенести данные из готового (ранее созданного) файла технологических параметров.
 
рис. 47. Окно технологических параметров проекта.
Чтобы перенести данные из уже созданного файла технологических параметров в открытый проект:
-	выберите команду File/Design Technology Parameters (рис. 47);
-	нажмите на кнопку Copy To Design.
(В лабораторных работах обычно используются предустановки).
Чтобы заново настроить технологические параметры в зависимости от классов цепей выполните команду Options/Design Rules. Ввести новые данные или ознакомится с готовыми установками, вы сможете, просмотрев все закладки данного окна.
 
рис. 48. Настройка параметров трассировки.
При необходимости задайте области запрета для трассировки командой Place/KeepOut.

Для запуска автотрассировщика выберите команду Route/Autorouters.
В диалоговом окне выберите трассировщик Quick Route (рис. 49).
 
рис. 49.Стартовое окно трассировщика Quick Route.
-	Кнопка Strategy File – задает имя файла стратегии трассировки, то есть совокупность параметров для трассировки (.STR).
-	Кнопка Output PCB File – задает имя файла с записью результатов трассировки (R*.PCB).
-	Кнопка Output Log File – задает имя текстового файла отчета о результатах трассировки (R*.LOG).
-	Шаг трассировки устанавливается в области Routing Grid (установите 12,5mil).
-	Ширина всех проводников выбирается в области Line Width.
-	Кнопка Passes позволяет настроить стратегию трассировки:
Wide Line Routing – автотрассировщик производит разводку в первую очередь «широких» цепей;
Horizontal – трассировка простых трасс только горизонтальными линиями;
Vertical – трассировка простых трасс только вертикальными линиями и т.д.
Трассировщик можно запускать с активизацией всех проходов, за исключением двух последних (оптимизирующих).
Для запуска процесса разводки дорожек нажмите на кнопку Start. В рабочем окне трассировщика отображается процесс разводки печатной платы.
Автоматическая трассировка проводится по команде Tools/Start Autorouter  . Автотрассировщик можно остановить по команде Tools/Pause Autorouter, возобновить по команде Tools/Restart Autorouter и прекратить по команде Tools/Stop Autorouter .
По завершении автоматической трассировки выберите команду File/Save and Return, чтобы перейти в редактор P-CAD PCB для окончательной коррекции печатной платы вручную (рис. 50)
 
рис. 50. Окно редактора P-CAD PCB содержащего изображение ПП для схемы, изображенной на рис. 21.
Вывод данных на печать.
Для вывода результатов проектирования на печать используется команда File/Print (рис. 51). Диалоговое окно позволяет настроить параметры печати.
 
рис. 51. Окно команды File/Print настройка параметров печати.
-	Флажок Current Window разрешает печать объектов ПП, расположенных в видимой части окна.
-	Флажок Current Display разрешает печать всего содержимого видимой части окна.
-	Флажок Scale to Fit Page масштабирует изображение так, чтобы оно полностью уместилось в поле выбранной для печати форматки.
Нажмите на кнопку Setup Print Jobs для того, чтобы с помощью появившегося диалогового окна (рис. 52) сформировать задания на печать.
Необходимо распечатать три вида печатной платы, которые отличаются набором выводимых на печать слоев, следовательно, надо сформировать три задания:
1 - печать верхнего слоя платы (документ должен содержать изображения компонентов, трассы со стороны компонентов, контура печатной платы);
2 – печать нижнего слоя платы (документ должен содержать трассы со стороны пайки, контур ПП);
3 – сборочный чертеж (документ должен содержать все элементы монтажа и их позиционные обозначения без трасс).
 
рис. 52.Окно Setup Print Jobs.
Для формирования задания 1 (печать верхнего слоя платы)
-	введите имя задания (например, 1) в область Print Job Name;
-	в области Layers выберите имена слоев, выводимых на печать (Top, Top Silk, Board);
-	в области Display Options установите флажки выводимых на печать элементов данных (Vias, Pads);
-	нажмите кнопку Add - номер задания на печать отобразится в области. Print Job Name.
Установка второго и третьего задания производится аналогично.
-	Для второго задания (печать нижнего слоя платы) задайте вывод на печать слоев Bottom, Board и элементов Vias, Pads.
-	Для третьего задания (сборочный чертеж) установите вывод всех слоев, кроме сигнальных (кроме Top, Bottom) и элементов Vias, Pads, Ref Des, Type.
Если свойства задания надо изменить выберите имя задания в области Print Job Name, внесите соответствующие изменения, нажмите клавишу Modify. 
Активизируйте кнопку Close, чтобы вернуться в предыдущее окно.
В поле Print Jobs укажите задание, которое необходимо распечатать.
Нажав кнопку Print Preview (предварительный просмотр) можно просмотреть компоновку чертежа.
Запустите печать кнопкой Generate Printouts.








Лабораторная работа №2
Ознакомление с порядком разработки печатной платы.
Цель: Получение основных навыков работы в графическом редакторе схем P-CAD PCB при разработке печатных плат.











































К работе допущен:
Работу выполнил:
Работу защитил:

 
Теоретическое введение
MATLAB – это высокопроизводительный язык для технических расчетов. Он включает в себя вычисления, визуализацию и программирование в удобной среде, где задачи и решения выражаются в форме, близкой к математической. Типичное использование MATLAB – это: 
-	- математические вычисления; 
-	- создание алгоритмов; 
-	- моделирование; 
-	- анализ данных, исследования и визуализация; 
-	- научная и инженерная графика; 
-	- разработка приложений, включая создание графического интерфейса. 
MATLAB – это интерактивная система, в которой основным элементом данных является массив. Это позволяет решать различные задачи, связанные с техническими вычислениями, особенно те, в которых используются матрицы и вектора, в несколько раз быстрее, чем при написании программ с использованием «скалярных» языков программирования, таких как С или Fortran.
Возможности системы MATLAB: 
в области вычислений 
•	матричные, векторные, логические операции; 
•	элементарные и специальные функции; 
•	полиномиальная арифметика; 
•	многомерные массивы; 
•	пользовательские структуры; 
•	массивы структур; 
в области реализации численных методов 
•	дифференциальные уравнения; 
•	вычисление одномерных и двумерных квадратур; 
•	поиск корней нелинейного алгебраического уравнения; 
•	оптимизация функций ряда переменных; 
•	одномерная и многомерная интерполяция; 
в области программирования 
•	свыше 500 встроенных математических функций; 
•	ввод/вывод двоичных и текстовых файлов; 
•	применение программ, написанных на С и Fortran; 
•	автоматическая перекодировка процедур MATLAB на языках С и C++; 
•	типовые управляющие структуры; 
в области визуализации и графики 
•	возможность создания двумерных и трехмерных графиков; 
•	проведения визуального анализа данных. 
Для облегчения специалистам различных областей науки и техники работы с пакетом вся библиотека функций разбита на разделы. Более подробно остановимся на таком разделе как Simulink. 
Среда имитационного моделирования Simulink.
Программа Simulink является приложением к пакету MATLAB. Приложение Simulink позволяет осуществлять исследование (моделирование во времени) поведение динамических линейных и нелинейных систем, причем составление «программы» и ввод характеристик систем можно производить в диалоговом режиме, путем сборки на экране схемы соединений элементарных (стандартных или пользовательских) звеньев. В результате такой сборки получается модель системы (ее называют S-моделью), которая сохраняется в файле с расширением .mdl. Такой процесс составления вычислительных программ принято называть визуальным программированием. 
Для запуска программы необходимо предварительно запустить пакет MATLAB. Основное окно пакета MATLAB показано на рис. 53. Там же показана подсказка появляющаяся в окне при наведении указателя мыши на ярлык Simulink в панели инструментов.
 
рис. 53. Основное окно программы MATLAB
После открытия основного окна программы MATLAB нужно запустить программу Simulink. Это можно сделать одним из трех способов:
•	Нажать кнопку  (Simulink)на панели инструментов командного окна MATLAB. 
•	В командной строке главного окна MATLAB напечатать Simulink и нажать клавишу Enter на клавиатуре. 
•	Выполнить команду Open… в меню File и открыть файл модели (mdl - файл). 
Последний вариант удобно использовать для запуска уже готовой и отлаженной модели, когда требуется лишь провести расчеты и не нужно добавлять новые блоки в модель. Использование первого и второго способов приводит к открытию окна обозревателя разделов библиотеки Simulink (рис. 54).
 
рис. 54. Окно разделов библиотеки Simulink
Структура разделов библиотеки Simulink.
Окно разделов библиотеки блоков (окно обозревателя) содержит следующие элементы (рис. 54): 
1.	Заголовок, с названием окна – Simulink Library Browser. 
2.	Меню, с командами File, Edit, View, Help. 
3.	Панель инструментов, с ярлыками наиболее часто используемых команд. 
4.	Окно комментария для вывода поясняющего сообщения о выбранном блоке. 
5.	Список разделов библиотеки, реализованный в виде дерева. 
6.	Окно содержимого раздела библиотеки (список вложенных разделов библиотеки или блоков) 
7.	Строка состояния, содержащая подсказку по выполняемому действию. 
На рис. 54 выделена основная библиотека Simulink (в левой части окна) и показаны ее разделы (в правой части окна). 
Библиотека Simulink содержит следующие основные разделы:
•	Continuous – линейные блоки. 
•	Discrete – дискретные блоки. 
•	Functions & Tables – функции и таблицы. 
•	Math – блоки математических операций. 
•	Nonlinear – нелинейные блоки. 
•	Signals & Systems – сигналы и системы. 
•	Sinks - регистрирующие устройства. 
•	Sources — источники сигналов и воздействий. 
•	Subsystems – блоки подсистем. 
Список разделов библиотеки Simulink представлен в виде дерева, и правила работы с ним являются общими для списков такого вида:
•	Пиктограмма свернутого узла дерева содержит символ "+", а пиктограмма развернутого содержит символ "-". 
•	Для того чтобы развернуть или свернуть узел дерева, достаточно щелкнуть на его пиктограмме левой клавишей мыши (ЛКМ). 
При выборе соответствующего раздела библиотеки в правой части окна отображается его содержимое (рис. 55). 
 
рис. 55. Окно обозревателя с набором блоков раздела библиотеки
Для работы с окном используются команды собранные в меню. Меню обозревателя библиотек содержит следующие пункты:
•	File (Файл) — Работа с файлами библиотек. 
•	Edit (Редактирование) — Добавление блоков и их поиск (по названию). 
•	View (Вид) — Управление показом элементов интерфейса. 
•	Help (Справка) — Вывод окна справки по обозревателю библиотек. 
Для работы с обозревателем можно также использовать кнопки на панели инструментов (рис. 56).
 
рис. 56. Панель инструментов обозревателя разделов библиотек
Кнопки панели инструментов имеют следующее назначение:
1.	Создать новую S-модель (открыть новое окно модели). 
2.	Открыть одну из существующих S-моделей. 
3.	Изменить свойства окна обозревателя. Данная кнопка позволяет установить режим отображения окна обозревателя "поверх всех окон”. Повторное нажатие отменяет такой режим. 
4.	Поиск блока по названию (по первым символам названия). После того как блок будет найден, в окне обозревателя откроется соответствующий раздел библиотеки, а блок будет выделен. Если же блок с таким названием отсутствует, то в окне комментария будет выведено сообщение Not found <имя блока> (Блок не найден). 
Библиотека блоков Simulink – это набор визуальных объектов, при использовании которых, соединяя отдельные модули между собой линиями связей, можно составлять функциональную блок-схему любого устройства.
Библиотека Simulink содержит следующие основные разделы:
•	Continuous – непрерывные блоки; 
•	Discontinuities – нелинейные блоки; 
•	Discrete – дискретные блоки; 
•	Logic and Bit Operations – логические и побитовые операции;
•	Look-Up Tables – табличные функции; 
•	Math Operations – библиотека математических операций; 
•	Model Verification – проверка модели; 
•	Model-Wide Utilities – утилиты расширения модели; 
•	Ports & Subsystems – порты и подсистемы; 
•	Signals Attributes – атрибуты сигналов; 
•	Signals Routing – пересылка сигналов; 
•	Sinks – приемники (виртуальные приборы для наблюдения и регистрации процессов); 
•	Sources – источники сигналов; 
•	User Defined Functions – пользовательские функции. 
Создание модели
Для создания модели в среде SIMULINK необходимо последовательно выполнить ряд действий:
1. Создать новый файл модели с помощью команды File/New/Model, или используя кнопку  на панели инструментов (здесь и далее, с помощью символа “/”, указаны пункты меню программы, которые необходимо последовательно выбрать для выполнения указанного действия). Вновь созданное окно модели показано на рис. 57.
 
рис. 57. Окно новой модели
2. Расположить блоки в окне модели. Для этого необходимо открыть соответствующий раздел библиотеки (Например, Sources - Источники). Далее, указав курсором на требуемый блок и нажав на левую клавишу “мыши” - “перетащить” блок в созданное окно. Клавишу мыши нужно держать нажатой. На рис. 58 показано окно модели, содержащее блоки.
 
рис. 58. Окно модели с добавленными блоками
Для удаления блока необходимо выбрать блок (указать курсором на его изображение и нажать левую клавишу “мыши”), а затем нажать клавишу Delete на клавиатуре. Для изменения размеров блока требуется выбрать блок, установить курсор в один из углов блока и, нажав левую клавишу “мыши”, изменить размер блока (курсор при этом превратится в двухстороннюю стрелку).
3. Далее, если это требуется, нужно изменить параметры блока, установленные программой “по умолчанию”. Для этого необходимо дважды щелкнуть левой клавишей “мыши”, указав курсором на изображение блока. Откроется окно редактирования параметров данного блока. При задании численных параметров следует иметь в виду, что в качестве десятичного разделителя должна использоваться точка, а не запятая. После внесения изменений нужно закрыть окно кнопкой OK. На рис. 59 в качестве примера показаны блок, моделирующий передаточную функцию и окно редактирования параметров данного блока. 
 
рис. 59. Блок, моделирующий передаточную функцию и окно редактирования параметров блока
4. После установки на схеме всех блоков из требуемых библиотек нужно выполнить соединение элементов схемы. Для соединения блоков необходимо указать курсором на “выход” блока, а затем, нажать и, не отпуская левую клавишу “мыши”, провести линию к входу другого блока. После чего отпустить клавишу. В случае правильного соединения изображение стрелки на входе блока изменяет цвет. Для создания точки разветвления в соединительной линии нужно подвести курсор к предполагаемому узлу и, нажав правую клавишу “мыши”, протянуть линию. Для удаления линии требуется выбрать линию (так же, как это выполняется для блока), а затем нажать клавишу Delete на клавиатуре. Схема модели, в которой выполнены соединения между блоками, показана на рис. 60.
 
рис. 60. Схема модели
5. После составления расчетной схемы необходимо сохранить ее в виде файла на диске, выбрав пункт меню File/Save As... в окне схемы и указав папку и имя файла. Следует иметь в виду, что имя файла не должно превышать 32 символов, должно начинаться с буквы и не может содержать символы кириллицы и спецсимволы. Это же требование относится и к пути файла (к тем папкам, в которых сохраняется файл). При последующем редактировании схемы можно пользоваться пунктом меню Fille/Save. При повторных запусках программы SIMULINK загрузка схемы осуществляется с помощью меню File/Open... в окне обозревателя библиотеки или из основного окна MATLAB.
Окно модели
Окно модели содержит следующие элементы (см.рис. 60):
1.	Заголовок, с названием окна. Вновь созданному окну присваивается имя Untitled с соответствующим номером. 
2.	Меню с командами File, Edit, View и т.д. 
3.	Панель инструментов. 
4.	Окно для создания схемы модели. 
5.	Строка состояния, содержащая информацию о текущем состоянии модели. 
Меню окна содержит команды для редактирования модели, ее настройки и управления процессом расчета, работы файлами и т.п.: 
•	File (Файл) — Работа с файлами моделей. 
•	Edit (Редактирование) — Изменение модели и поиск блоков. 
•	View (Вид) — Управление показом элементов интерфейса. 
•	Simulation (Моделирование) — Задание настроек для моделирования и управление процессом расчета. 
•	Format (Форматирование) — Изменение внешнего вида блоков и модели в целом. 
•	Tools (Инструментальные средства) — Применение специальных средств для работы с моделью (отладчик, линейный анализ и т.п.) 
•	Help (Справка) — Вывод окон справочной системы. 
Для работы с моделью можно также использовать кнопки на панели инструментов (рис. 61).
 
рис. 61. Панель инструментов окна модели
Кнопки панели инструментов имеют следующее назначение: 
1.	New Model — Открыть новое (пустое) окно модели. 
2.	Open Model — Открыть существующий mdl-файл. 
3.	Save Model — Сохранить mdl-файл на диске. 
4.	Print Model — Вывод на печать блок-диаграммы модели. 
5.	Cut — Вырезать выделенную часть модели в буфер промежуточного хранения. 
6.	Copy — Скопировать выделенную часть модели в буфер промежуточного хранения. 
7.	Paste — Вставить в окно модели содержимое буфера промежуточного хранения. 
8.	Undo — Отменить предыдущую операцию редактирования. 
9.	Redo — Восстановить результат отмененной операции редактирования. 
10.	Library Browser — Открыть окно обозревателя библиотек. 
11.	Toggle Model Browser — Открыть окно обозревателя модели. 
12.	Go to parent system — Переход из подсистемы в систему высшего уровня иерархии (“родительсую систему”). Команда доступна только, если открыта подсистема. 
13.	Debug — Запуск отладчика модели. 
14.	Start/Pause/Continue Simulation — Запуск модели на исполнение (команда Start); после запуска модели на изображении кнопки выводится символ  , и ей соответствует уже команда Pause (Приостановить моделирование); для возобновления моделирования следует щелкнуть по той же кнопке, поскольку в режиме паузы ей соответствует команда Continue (Продолжить). 
15.	Stop — Закончить моделирование. Кнопка становится доступной после начала моделирования, а также после выполнения команды Pause. 
16.	Normal/Accelerator — Обычный/Ускоренный режим расчета. Инструмент доступен, если установлено приложение Simulink Performance Tool. 
В нижней части окна модели находится строка состояния, в которой отображаются краткие комментарии к кнопкам панели инструментов, а также к пунктам меню, когда указатель мыши находится над соответствующим элементом интерфейса. Это же текстовое поле используется и для индикации состояния Simulink: Ready (Готов) или Running (Выполнение). В строке состояния отображаются также: 
•	масштаб отображения блок-диаграммы (в процентах, исходное значение равно 100%), 
•	индикатор степени завершенности сеанса моделирования (появляется после запуска модели), 
•	текущее значения модельного времени (выводится также только после запуска модели), 
•	используемый алгоритм расчета состояний модели (метод решения). 
Основные приемы подготовки и редактирования модели
Добавление текстовых надписей
Для повышения наглядности модели удобно использовать текстовые надписи. Для создания надписи нужно указать мышью место надписи и дважды щелкнуть левой клавишей мыши. После этого появится прямоугольная рамка с курсором ввода. Аналогичным образом можно изменить и подписи к блоками моделей.. На рис. 62показаны текстовая надпись и изменение надписи в блоке передаточной функции. Следует иметь в виду, что рассматриваемая версия программы (Simulink 4) не адаптирована к использованию кириллических шрифтов, и применение их может иметь самые разные последствия: - отображение надписей в нечитаемом виде, обрезание надписей, сообщения об ошибках, а также невозможность открыть модель после ее сохранения. Поэтому, применение надписей на русском языке для текущей версии Simulink крайне не желательно.
 
рис. 62. Текстовая надпись и изменение надписи в Transfer Function
Выделение объектов
Для выполнения какого-либо действия с элементом модели (блоком, соединительной линией, надписью) этот элемент необходимо сначала выделить.
Выделение объектов проще всего осуществляется мышью. Для этого необходимо установить курсор мыши на нужном объекте и щелкнуть левой клавишей мыши. Произойдет выделение объекта. Об этом будут свидетельствовать маркеры по углам объекта (см. рис. 10). Можно также выделить несколько объектов. Для этого надо установить курсор мыши вблизи группы объектов, нажать левую клавишу мыши и, не отпуская ее, начать перемещать мышь. Появится пунктирная рамка, размеры которой будут изменяться при перемещении мыши. Все охваченные рамкой объекты становятся выделенными. Выделить все объекты также можно, используя команду Edit/Select All. После выделения объекта его можно копировать или перемещать в буфер промежуточного хранения, извлекать из буфера, а также удалять, используя стандартные приемы работы в Windows-программах. 
Копирование и перемещение объектов в буфер промежуточного хранения
Для копирования объекта в буфер его необходимо предварительно выделить, а затем выполнить команду Edit/Copy или воспользоваться инструментом  на панели инструментов.
Для вырезания объекта в буфер его необходимо предварительно выделить, а затем выполнить команду Edit/Cut или воспользоваться инструментом  на панели инструментов. При выполнении данных операций следует иметь в виду, что объекты помещаются в собственный буфер MATLAB и недоступны из других приложений. Использование команды Edit/Copy model to Clipboard позволяет поместить графическое изображение модели в буфер Windows и, соответственно, делает его доступным для остальных программ.
Копирование можно выполнить и таким образом: нажать правую клавишу мыши, и не отпуская ее, переместить объект. При этом будет создана копия объекта, которую можно переместить в необходимое место.
Вставка объектов из буфера промежуточного хранения
Для вставки объекта из буфера необходимо предварительно указать место вставки, щелкнув левой клавишей мыши в предполагаемом месте вставки, а затем выполнить команду Edit/Paste или воспользоваться инструментом  на панели инструментов.
Удаление объектов
Для удаления объекта его необходимо предварительно выделить, а затем выполнить команду Edit/Clear или воспользоваться клавишей Delete на клавиатуре. Следует учесть, что команда Clear удаляет блок без помещения его в буфер обмена. Однако эту операцию можно отменить командой меню File/Undo.
Соединение блоков
Для соединения блоков необходимо сначала установить курсор мыши на выходной порт одного из блоков. Курсор при этом превратится в большой крест из тонких линий (рис. 63). Держа нажатой левую кнопку мыши, нужно переместить курсор ко входному порту нужного блока. Курсор мыши примет вид креста из тонких сдвоенных линий (рис. 64). После создания линии необходимо отпустить левую клавишу мыши. Свидетельством того, что соединение создано, будет жирная стрелка у входного порта блока. Выделение линии производится точно также как и выделение блока – одинарным щелчком левой клавиши мыши. Черные маркеры, расположенные в узлах соединительной линии будут говорить о том, что линия выделена.
 
рис. 63. Начало создания соединения
 
рис. 64. Завершение создания соединения
Создание петли линии соединения выполняется также как перемещение блока. Линия соединения выделяется, и затем нужная часть линии перемещается. рис. 65 поясняет этот процесс.
 
рис. 65. Создание петли в соединительной линии
Удаление соединений выполняется также как и любых других объектов.
Изменение размеров блоков
Для изменения размера блока он выделяется, после чего курсор мыши надо установить на один из маркеров по углам блока. После превращения курсора в двустороннюю стрелку, необходимо нажать левую клавишу мыши и растянуть (или сжать) изображения блока. На рис. 66 показан этот процесс. Размеры надписей блока при этом не изменяются.
 
рис. 66. Изменение размера блока

